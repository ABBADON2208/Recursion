class Solution {
    
    Set<ArrayList<Integer>> store = new HashSet<>();
    boolean visit[];
    List<List<Integer>> result = new ArrayList<List<Integer>>();
    
    
    public List<List<Integer>> permuteUnique(int[] nums) {
    visit=new boolean[nums.length];
    permutation(nums,new ArrayList<Integer>());
    return new ArrayList<>(store);    
    }
    
    
    
    public void permutation(int[] nums,ArrayList<Integer> curr) {
        
       if(curr.size()==nums.length) {
           store.add(new ArrayList<Integer>(curr));
           return;           
       }
        
       
       for(int i=0;i<nums.length;i++)
       {
          if(!visit[i]==true) {           
          visit[i]=true;
          curr.add(nums[i]);
          permutation(nums,curr);
          visit[i]=false;
          curr.remove(curr.size()-1); }
       }         
    }   
}
